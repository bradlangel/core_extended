<src/*.ml{,i}>          : pa_ounit_lib(core_extended)
<{,janecheck{,_kernel}/}{src,test}/*.ml{,i}> : syntax_camlp4o
<janecheck/src/*.ml{,i}> : ugly_hack_to_workaround_ocamlbuild_nightmare
"src/console.ml"        : mlh, package(camlp4.macro)
"src/core_command.ml"   : mlh, package(camlp4.macro)
"src/extended_linux.ml" : mlh, package(camlp4.macro)
"src/malloc.ml"         : mlh, package(camlp4.macro)
"src/posix_clock.ml"    : mlh, package(camlp4.macro)
"test/test.ml"          : mlh, package(camlp4.macro)
# OASIS_START
# DO NOT EDIT (digest: dc0f02145345cf5fb0e68402df263fcc)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library core_extended
"src/core_extended.cmxs": use_core_extended
"src/alternating_primary_backup_assignment.cmx": for-pack(Core_extended)
"src/atomic_edit.cmx": for-pack(Core_extended)
"src/bin_io_utils.cmx": for-pack(Core_extended)
"src/bitarray.cmx": for-pack(Core_extended)
"src/cache.cmx": for-pack(Core_extended)
"src/cbuffer.cmx": for-pack(Core_extended)
"src/color_print.cmx": for-pack(Core_extended)
"src/crit_bit.cmx": for-pack(Core_extended)
"src/csv_writer.cmx": for-pack(Core_extended)
"src/deprecated_bench.cmx": for-pack(Core_extended)
"src/deprecated_command.cmx": for-pack(Core_extended)
"src/deprecated_fcommand.cmx": for-pack(Core_extended)
"src/deprecated_service_command.cmx": for-pack(Core_extended)
"src/documented_match_statement.cmx": for-pack(Core_extended)
"src/english.cmx": for-pack(Core_extended)
"src/environment.cmx": for-pack(Core_extended)
"src/exception_check.cmx": for-pack(Core_extended)
"src/extended_array.cmx": for-pack(Core_extended)
"src/extended_common.cmx": for-pack(Core_extended)
"src/extended_exn.cmx": for-pack(Core_extended)
"src/extended_filename.cmx": for-pack(Core_extended)
"src/extended_float.cmx": for-pack(Core_extended)
"src/extended_gc.cmx": for-pack(Core_extended)
"src/extended_hashtbl.cmx": for-pack(Core_extended)
"src/extended_int.cmx": for-pack(Core_extended)
"src/extended_int32.cmx": for-pack(Core_extended)
"src/extended_int63.cmx": for-pack(Core_extended)
"src/extended_int64.cmx": for-pack(Core_extended)
"src/extended_linux.cmx": for-pack(Core_extended)
"src/extended_list.cmx": for-pack(Core_extended)
"src/extended_list__LCS.cmx": for-pack(Core_extended)
"src/extended_list__multimerge.cmx": for-pack(Core_extended)
"src/extended_memo.cmx": for-pack(Core_extended)
"src/extended_monad.cmx": for-pack(Core_extended)
"src/extended_nativeint.cmx": for-pack(Core_extended)
"src/extended_option.cmx": for-pack(Core_extended)
"src/extended_result.cmx": for-pack(Core_extended)
"src/extended_sexp.cmx": for-pack(Core_extended)
"src/extended_string.cmx": for-pack(Core_extended)
"src/extended_sys.cmx": for-pack(Core_extended)
"src/extended_thread.cmx": for-pack(Core_extended)
"src/extended_time.cmx": for-pack(Core_extended)
"src/extended_unix.cmx": for-pack(Core_extended)
"src/extra_fields.cmx": for-pack(Core_extended)
"src/fd_leak_check.cmx": for-pack(Core_extended)
"src/find.cmx": for-pack(Core_extended)
"src/flang.cmx": for-pack(Core_extended)
"src/float_ref.cmx": for-pack(Core_extended)
"src/fold_map.cmx": for-pack(Core_extended)
"src/generic.cmx": for-pack(Core_extended)
"src/hashtbl2.cmx": for-pack(Core_extended)
"src/hashtbl2_pair.cmx": for-pack(Core_extended)
"src/interval_map.cmx": for-pack(Core_extended)
"src/interval_map_intf.cmx": for-pack(Core_extended)
"src/invariant.cmx": for-pack(Core_extended)
"src/invocation.cmx": for-pack(Core_extended)
"src/iter.cmx": for-pack(Core_extended)
"src/lazy_list.cmx": for-pack(Core_extended)
"src/lazy_m.cmx": for-pack(Core_extended)
"src/lazy_sequence.cmx": for-pack(Core_extended)
"src/left_boundary.cmx": for-pack(Core_extended)
"src/linebuf.cmx": for-pack(Core_extended)
"src/list_zipper.cmx": for-pack(Core_extended)
"src/logger.cmx": for-pack(Core_extended)
"src/low_level_debug.cmx": for-pack(Core_extended)
"src/malloc.cmx": for-pack(Core_extended)
"src/multi_map.cmx": for-pack(Core_extended)
"src/net_utils.cmx": for-pack(Core_extended)
"src/number.cmx": for-pack(Core_extended)
"src/olang.cmx": for-pack(Core_extended)
"src/packed_array.cmx": for-pack(Core_extended)
"src/packed_map.cmx": for-pack(Core_extended)
"src/posix_clock.cmx": for-pack(Core_extended)
"src/pp.cmx": for-pack(Core_extended)
"src/printc.cmx": for-pack(Core_extended)
"src/process.cmx": for-pack(Core_extended)
"src/procfs.cmx": for-pack(Core_extended)
"src/prod_or_test.cmx": for-pack(Core_extended)
"src/quickcheck_deprecated.cmx": for-pack(Core_extended)
"src/random_selection.cmx": for-pack(Core_extended)
"src/readline.cmx": for-pack(Core_extended)
"src/readline__input_char.cmx": for-pack(Core_extended)
"src/readline__input_loop.cmx": for-pack(Core_extended)
"src/runtime_blockout_detector.cmx": for-pack(Core_extended)
"src/rw_mutex.cmx": for-pack(Core_extended)
"src/sampler.cmx": for-pack(Core_extended)
"src/search_foo.cmx": for-pack(Core_extended)
"src/semaphore.cmx": for-pack(Core_extended)
"src/sendmail.cmx": for-pack(Core_extended)
"src/service_command.cmx": for-pack(Core_extended)
"src/set_lang.cmx": for-pack(Core_extended)
"src/set_lang_intf.cmx": for-pack(Core_extended)
"src/shell.cmx": for-pack(Core_extended)
"src/shell__core.cmx": for-pack(Core_extended)
"src/shell__line_buffer.cmx": for-pack(Core_extended)
"src/sntp.cmx": for-pack(Core_extended)
"src/splay_tree.cmx": for-pack(Core_extended)
"src/std.cmx": for-pack(Core_extended)
"src/string_zipper.cmx": for-pack(Core_extended)
"src/sys_utils.cmx": for-pack(Core_extended)
"src/tcp.cmx": for-pack(Core_extended)
"src/timed_function.cmx": for-pack(Core_extended)
"src/trie.cmx": for-pack(Core_extended)
"src/unix_utils.cmx": for-pack(Core_extended)
"src/update_queue.cmx": for-pack(Core_extended)
<src/*.ml{,i,y}>: oasis_library_core_extended_ccopt
"src/extended_int_stubs.c": oasis_library_core_extended_ccopt
"src/extended_linux_stubs.c": oasis_library_core_extended_ccopt
"src/extended_unix_stubs.c": oasis_library_core_extended_ccopt
"src/fork_exec.c": oasis_library_core_extended_ccopt
"src/linebuf_stubs.c": oasis_library_core_extended_ccopt
"src/low_level_debug_stubs.c": oasis_library_core_extended_ccopt
"src/malloc_stubs.c": oasis_library_core_extended_ccopt
"src/posix_clock_stubs.c": oasis_library_core_extended_ccopt
<src/core_extended.{cma,cmxa}>: use_libcore_extended_stubs
<src/*.ml{,i,y}>: package(bigarray)
<src/*.ml{,i,y}>: package(bin_prot)
<src/*.ml{,i,y}>: package(bin_prot.syntax)
<src/*.ml{,i,y}>: package(comparelib.syntax)
<src/*.ml{,i,y}>: package(core)
<src/*.ml{,i,y}>: package(custom_printf)
<src/*.ml{,i,y}>: package(custom_printf.syntax)
<src/*.ml{,i,y}>: package(fieldslib)
<src/*.ml{,i,y}>: package(fieldslib.syntax)
<src/*.ml{,i,y}>: package(pa_bench.syntax)
<src/*.ml{,i,y}>: package(pa_ounit)
<src/*.ml{,i,y}>: package(pa_ounit.syntax)
<src/*.ml{,i,y}>: package(pa_pipebang)
<src/*.ml{,i,y}>: package(pa_test)
<src/*.ml{,i,y}>: package(pa_test.syntax)
<src/*.ml{,i,y}>: package(re2)
<src/*.ml{,i,y}>: package(sexplib)
<src/*.ml{,i,y}>: package(sexplib.syntax)
<src/*.ml{,i,y}>: package(sexplib_num)
<src/*.ml{,i,y}>: package(textutils)
<src/*.ml{,i,y}>: package(threads)
<src/*.ml{,i,y}>: package(unix)
"src/extended_int_stubs.c": package(bigarray)
"src/extended_int_stubs.c": package(bin_prot)
"src/extended_int_stubs.c": package(bin_prot.syntax)
"src/extended_int_stubs.c": package(comparelib.syntax)
"src/extended_int_stubs.c": package(core)
"src/extended_int_stubs.c": package(custom_printf)
"src/extended_int_stubs.c": package(custom_printf.syntax)
"src/extended_int_stubs.c": package(fieldslib)
"src/extended_int_stubs.c": package(fieldslib.syntax)
"src/extended_int_stubs.c": package(pa_bench.syntax)
"src/extended_int_stubs.c": package(pa_ounit)
"src/extended_int_stubs.c": package(pa_ounit.syntax)
"src/extended_int_stubs.c": package(pa_pipebang)
"src/extended_int_stubs.c": package(pa_test)
"src/extended_int_stubs.c": package(pa_test.syntax)
"src/extended_int_stubs.c": package(re2)
"src/extended_int_stubs.c": package(sexplib)
"src/extended_int_stubs.c": package(sexplib.syntax)
"src/extended_int_stubs.c": package(sexplib_num)
"src/extended_int_stubs.c": package(textutils)
"src/extended_int_stubs.c": package(threads)
"src/extended_int_stubs.c": package(unix)
"src/extended_linux_stubs.c": package(bigarray)
"src/extended_linux_stubs.c": package(bin_prot)
"src/extended_linux_stubs.c": package(bin_prot.syntax)
"src/extended_linux_stubs.c": package(comparelib.syntax)
"src/extended_linux_stubs.c": package(core)
"src/extended_linux_stubs.c": package(custom_printf)
"src/extended_linux_stubs.c": package(custom_printf.syntax)
"src/extended_linux_stubs.c": package(fieldslib)
"src/extended_linux_stubs.c": package(fieldslib.syntax)
"src/extended_linux_stubs.c": package(pa_bench.syntax)
"src/extended_linux_stubs.c": package(pa_ounit)
"src/extended_linux_stubs.c": package(pa_ounit.syntax)
"src/extended_linux_stubs.c": package(pa_pipebang)
"src/extended_linux_stubs.c": package(pa_test)
"src/extended_linux_stubs.c": package(pa_test.syntax)
"src/extended_linux_stubs.c": package(re2)
"src/extended_linux_stubs.c": package(sexplib)
"src/extended_linux_stubs.c": package(sexplib.syntax)
"src/extended_linux_stubs.c": package(sexplib_num)
"src/extended_linux_stubs.c": package(textutils)
"src/extended_linux_stubs.c": package(threads)
"src/extended_linux_stubs.c": package(unix)
"src/extended_unix_stubs.c": package(bigarray)
"src/extended_unix_stubs.c": package(bin_prot)
"src/extended_unix_stubs.c": package(bin_prot.syntax)
"src/extended_unix_stubs.c": package(comparelib.syntax)
"src/extended_unix_stubs.c": package(core)
"src/extended_unix_stubs.c": package(custom_printf)
"src/extended_unix_stubs.c": package(custom_printf.syntax)
"src/extended_unix_stubs.c": package(fieldslib)
"src/extended_unix_stubs.c": package(fieldslib.syntax)
"src/extended_unix_stubs.c": package(pa_bench.syntax)
"src/extended_unix_stubs.c": package(pa_ounit)
"src/extended_unix_stubs.c": package(pa_ounit.syntax)
"src/extended_unix_stubs.c": package(pa_pipebang)
"src/extended_unix_stubs.c": package(pa_test)
"src/extended_unix_stubs.c": package(pa_test.syntax)
"src/extended_unix_stubs.c": package(re2)
"src/extended_unix_stubs.c": package(sexplib)
"src/extended_unix_stubs.c": package(sexplib.syntax)
"src/extended_unix_stubs.c": package(sexplib_num)
"src/extended_unix_stubs.c": package(textutils)
"src/extended_unix_stubs.c": package(threads)
"src/extended_unix_stubs.c": package(unix)
"src/fork_exec.c": package(bigarray)
"src/fork_exec.c": package(bin_prot)
"src/fork_exec.c": package(bin_prot.syntax)
"src/fork_exec.c": package(comparelib.syntax)
"src/fork_exec.c": package(core)
"src/fork_exec.c": package(custom_printf)
"src/fork_exec.c": package(custom_printf.syntax)
"src/fork_exec.c": package(fieldslib)
"src/fork_exec.c": package(fieldslib.syntax)
"src/fork_exec.c": package(pa_bench.syntax)
"src/fork_exec.c": package(pa_ounit)
"src/fork_exec.c": package(pa_ounit.syntax)
"src/fork_exec.c": package(pa_pipebang)
"src/fork_exec.c": package(pa_test)
"src/fork_exec.c": package(pa_test.syntax)
"src/fork_exec.c": package(re2)
"src/fork_exec.c": package(sexplib)
"src/fork_exec.c": package(sexplib.syntax)
"src/fork_exec.c": package(sexplib_num)
"src/fork_exec.c": package(textutils)
"src/fork_exec.c": package(threads)
"src/fork_exec.c": package(unix)
"src/linebuf_stubs.c": package(bigarray)
"src/linebuf_stubs.c": package(bin_prot)
"src/linebuf_stubs.c": package(bin_prot.syntax)
"src/linebuf_stubs.c": package(comparelib.syntax)
"src/linebuf_stubs.c": package(core)
"src/linebuf_stubs.c": package(custom_printf)
"src/linebuf_stubs.c": package(custom_printf.syntax)
"src/linebuf_stubs.c": package(fieldslib)
"src/linebuf_stubs.c": package(fieldslib.syntax)
"src/linebuf_stubs.c": package(pa_bench.syntax)
"src/linebuf_stubs.c": package(pa_ounit)
"src/linebuf_stubs.c": package(pa_ounit.syntax)
"src/linebuf_stubs.c": package(pa_pipebang)
"src/linebuf_stubs.c": package(pa_test)
"src/linebuf_stubs.c": package(pa_test.syntax)
"src/linebuf_stubs.c": package(re2)
"src/linebuf_stubs.c": package(sexplib)
"src/linebuf_stubs.c": package(sexplib.syntax)
"src/linebuf_stubs.c": package(sexplib_num)
"src/linebuf_stubs.c": package(textutils)
"src/linebuf_stubs.c": package(threads)
"src/linebuf_stubs.c": package(unix)
"src/low_level_debug_stubs.c": package(bigarray)
"src/low_level_debug_stubs.c": package(bin_prot)
"src/low_level_debug_stubs.c": package(bin_prot.syntax)
"src/low_level_debug_stubs.c": package(comparelib.syntax)
"src/low_level_debug_stubs.c": package(core)
"src/low_level_debug_stubs.c": package(custom_printf)
"src/low_level_debug_stubs.c": package(custom_printf.syntax)
"src/low_level_debug_stubs.c": package(fieldslib)
"src/low_level_debug_stubs.c": package(fieldslib.syntax)
"src/low_level_debug_stubs.c": package(pa_bench.syntax)
"src/low_level_debug_stubs.c": package(pa_ounit)
"src/low_level_debug_stubs.c": package(pa_ounit.syntax)
"src/low_level_debug_stubs.c": package(pa_pipebang)
"src/low_level_debug_stubs.c": package(pa_test)
"src/low_level_debug_stubs.c": package(pa_test.syntax)
"src/low_level_debug_stubs.c": package(re2)
"src/low_level_debug_stubs.c": package(sexplib)
"src/low_level_debug_stubs.c": package(sexplib.syntax)
"src/low_level_debug_stubs.c": package(sexplib_num)
"src/low_level_debug_stubs.c": package(textutils)
"src/low_level_debug_stubs.c": package(threads)
"src/low_level_debug_stubs.c": package(unix)
"src/malloc_stubs.c": package(bigarray)
"src/malloc_stubs.c": package(bin_prot)
"src/malloc_stubs.c": package(bin_prot.syntax)
"src/malloc_stubs.c": package(comparelib.syntax)
"src/malloc_stubs.c": package(core)
"src/malloc_stubs.c": package(custom_printf)
"src/malloc_stubs.c": package(custom_printf.syntax)
"src/malloc_stubs.c": package(fieldslib)
"src/malloc_stubs.c": package(fieldslib.syntax)
"src/malloc_stubs.c": package(pa_bench.syntax)
"src/malloc_stubs.c": package(pa_ounit)
"src/malloc_stubs.c": package(pa_ounit.syntax)
"src/malloc_stubs.c": package(pa_pipebang)
"src/malloc_stubs.c": package(pa_test)
"src/malloc_stubs.c": package(pa_test.syntax)
"src/malloc_stubs.c": package(re2)
"src/malloc_stubs.c": package(sexplib)
"src/malloc_stubs.c": package(sexplib.syntax)
"src/malloc_stubs.c": package(sexplib_num)
"src/malloc_stubs.c": package(textutils)
"src/malloc_stubs.c": package(threads)
"src/malloc_stubs.c": package(unix)
"src/posix_clock_stubs.c": package(bigarray)
"src/posix_clock_stubs.c": package(bin_prot)
"src/posix_clock_stubs.c": package(bin_prot.syntax)
"src/posix_clock_stubs.c": package(comparelib.syntax)
"src/posix_clock_stubs.c": package(core)
"src/posix_clock_stubs.c": package(custom_printf)
"src/posix_clock_stubs.c": package(custom_printf.syntax)
"src/posix_clock_stubs.c": package(fieldslib)
"src/posix_clock_stubs.c": package(fieldslib.syntax)
"src/posix_clock_stubs.c": package(pa_bench.syntax)
"src/posix_clock_stubs.c": package(pa_ounit)
"src/posix_clock_stubs.c": package(pa_ounit.syntax)
"src/posix_clock_stubs.c": package(pa_pipebang)
"src/posix_clock_stubs.c": package(pa_test)
"src/posix_clock_stubs.c": package(pa_test.syntax)
"src/posix_clock_stubs.c": package(re2)
"src/posix_clock_stubs.c": package(sexplib)
"src/posix_clock_stubs.c": package(sexplib.syntax)
"src/posix_clock_stubs.c": package(sexplib_num)
"src/posix_clock_stubs.c": package(textutils)
"src/posix_clock_stubs.c": package(threads)
"src/posix_clock_stubs.c": package(unix)
# Library selector_lib
"selector/src/selector_lib.cmxs": use_selector_lib
"selector/src/selector.cmx": for-pack(Selector_lib)
<selector/src/*.ml{,i,y}>: package(bin_prot.syntax)
<selector/src/*.ml{,i,y}>: package(core)
<selector/src/*.ml{,i,y}>: package(re2)
<selector/src/*.ml{,i,y}>: package(sexplib.syntax)
<selector/src/*.ml{,i,y}>: package(threads)
# Executable core_extended_hello
<test/core_extended_hello.{native,byte}>: package(bigarray)
<test/core_extended_hello.{native,byte}>: package(bin_prot)
<test/core_extended_hello.{native,byte}>: package(bin_prot.syntax)
<test/core_extended_hello.{native,byte}>: package(comparelib.syntax)
<test/core_extended_hello.{native,byte}>: package(core)
<test/core_extended_hello.{native,byte}>: package(custom_printf)
<test/core_extended_hello.{native,byte}>: package(custom_printf.syntax)
<test/core_extended_hello.{native,byte}>: package(fieldslib)
<test/core_extended_hello.{native,byte}>: package(fieldslib.syntax)
<test/core_extended_hello.{native,byte}>: package(pa_bench.syntax)
<test/core_extended_hello.{native,byte}>: package(pa_ounit)
<test/core_extended_hello.{native,byte}>: package(pa_ounit.syntax)
<test/core_extended_hello.{native,byte}>: package(pa_pipebang)
<test/core_extended_hello.{native,byte}>: package(pa_test)
<test/core_extended_hello.{native,byte}>: package(pa_test.syntax)
<test/core_extended_hello.{native,byte}>: package(re2)
<test/core_extended_hello.{native,byte}>: package(sexplib)
<test/core_extended_hello.{native,byte}>: package(sexplib.syntax)
<test/core_extended_hello.{native,byte}>: package(sexplib_num)
<test/core_extended_hello.{native,byte}>: package(textutils)
<test/core_extended_hello.{native,byte}>: package(threads)
<test/core_extended_hello.{native,byte}>: package(unix)
<test/core_extended_hello.{native,byte}>: use_core_extended
<test/core_extended_hello.{native,byte}>: custom
# Executable core_hello
<test/core_hello.{native,byte}>: package(core)
<test/core_hello.{native,byte}>: package(threads)
<test/core_hello.{native,byte}>: custom
# Executable test_runner
<test/test_runner.{native,byte}>: package(bigarray)
<test/test_runner.{native,byte}>: package(bin_prot)
<test/test_runner.{native,byte}>: package(bin_prot.syntax)
<test/test_runner.{native,byte}>: package(comparelib.syntax)
<test/test_runner.{native,byte}>: package(core)
<test/test_runner.{native,byte}>: package(custom_printf)
<test/test_runner.{native,byte}>: package(custom_printf.syntax)
<test/test_runner.{native,byte}>: package(fieldslib)
<test/test_runner.{native,byte}>: package(fieldslib.syntax)
<test/test_runner.{native,byte}>: package(oUnit)
<test/test_runner.{native,byte}>: package(pa_bench.syntax)
<test/test_runner.{native,byte}>: package(pa_ounit)
<test/test_runner.{native,byte}>: package(pa_ounit.syntax)
<test/test_runner.{native,byte}>: package(pa_pipebang)
<test/test_runner.{native,byte}>: package(pa_test)
<test/test_runner.{native,byte}>: package(pa_test.syntax)
<test/test_runner.{native,byte}>: package(re2)
<test/test_runner.{native,byte}>: package(sexplib)
<test/test_runner.{native,byte}>: package(sexplib.syntax)
<test/test_runner.{native,byte}>: package(sexplib_num)
<test/test_runner.{native,byte}>: package(textutils)
<test/test_runner.{native,byte}>: package(threads)
<test/test_runner.{native,byte}>: package(unix)
<test/test_runner.{native,byte}>: use_core_extended
<test/*.ml{,i,y}>: package(bigarray)
<test/*.ml{,i,y}>: package(bin_prot)
<test/*.ml{,i,y}>: package(bin_prot.syntax)
<test/*.ml{,i,y}>: package(comparelib.syntax)
<test/*.ml{,i,y}>: package(core)
<test/*.ml{,i,y}>: package(custom_printf)
<test/*.ml{,i,y}>: package(custom_printf.syntax)
<test/*.ml{,i,y}>: package(fieldslib)
<test/*.ml{,i,y}>: package(fieldslib.syntax)
<test/*.ml{,i,y}>: package(oUnit)
<test/*.ml{,i,y}>: package(pa_bench.syntax)
<test/*.ml{,i,y}>: package(pa_ounit)
<test/*.ml{,i,y}>: package(pa_ounit.syntax)
<test/*.ml{,i,y}>: package(pa_pipebang)
<test/*.ml{,i,y}>: package(pa_test)
<test/*.ml{,i,y}>: package(pa_test.syntax)
<test/*.ml{,i,y}>: package(re2)
<test/*.ml{,i,y}>: package(sexplib)
<test/*.ml{,i,y}>: package(sexplib.syntax)
<test/*.ml{,i,y}>: package(sexplib_num)
<test/*.ml{,i,y}>: package(textutils)
<test/*.ml{,i,y}>: package(threads)
<test/*.ml{,i,y}>: package(unix)
<test/*.ml{,i,y}>: use_core_extended
<test/test_runner.{native,byte}>: custom
# OASIS_STOP
